[
  {
    "ContainingType": "AdministrationController",
    "Method": "CreateAdministration",
    "RelativePath": "api/Administration",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Administration.CreateAdministrationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdministrationController",
    "Method": "GetAllAdministrations",
    "RelativePath": "api/Administration",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdministrationController",
    "Method": "GetAdministrationById",
    "RelativePath": "api/Administration/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdministrationController",
    "Method": "UpdateAdministration",
    "RelativePath": "api/Administration/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Administration.UpdateAdministrationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AdministrationController",
    "Method": "DeleteAdministration",
    "RelativePath": "api/Administration/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.AuditLogController",
    "Method": "CreateAuditLog",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._AuditLog.CreateAuditLogCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.AuditLogController",
    "Method": "GetAllAuditLogs",
    "RelativePath": "api/AuditLog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.AuditLogDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.AuditLogController",
    "Method": "GetAuditLog",
    "RelativePath": "api/AuditLog/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.AuditLogDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.AuditLogController",
    "Method": "UpdateAuditLog",
    "RelativePath": "api/AuditLog/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._AuditLog.UpdateAuditLogCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.AuditLogController",
    "Method": "DeleteAuditLog",
    "RelativePath": "api/AuditLog/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Administration.LoginCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.AuthController",
    "Method": "Signup",
    "RelativePath": "api/Auth/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Administration.Registration_System.Commands._Administration.SignupCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.DriverLicenseController",
    "Method": "Create",
    "RelativePath": "api/DriverLicense",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._DriverLicense.CreateDriverLicenseCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.DriverLicenseController",
    "Method": "GetAll",
    "RelativePath": "api/DriverLicense",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.DriverLicenseController",
    "Method": "GetById",
    "RelativePath": "api/DriverLicense/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.DriverLicenseController",
    "Method": "Update",
    "RelativePath": "api/DriverLicense/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._DriverLicense.UpdateDriverLicenseCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.DriverLicenseController",
    "Method": "Delete",
    "RelativePath": "api/DriverLicense/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.InspectionRecordController",
    "Method": "CreateInspectionRecord",
    "RelativePath": "api/InspectionRecord",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._InspectionRecord.CreateInspectionRecordCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InspectionRecordController",
    "Method": "GetAllInspectionRecords",
    "RelativePath": "api/InspectionRecord",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.InspectionRecordDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InspectionRecordController",
    "Method": "GetInspectionRecord",
    "RelativePath": "api/InspectionRecord/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.InspectionRecordDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InspectionRecordController",
    "Method": "UpdateInspectionRecord",
    "RelativePath": "api/InspectionRecord/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._InspectionRecord.UpdateInspectionRecordCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.InspectionRecordController",
    "Method": "DeleteInspectionRecord",
    "RelativePath": "api/InspectionRecord/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.InsuranceController",
    "Method": "CreateInsurance",
    "RelativePath": "api/Insurance",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Insurance.CreateInsuranceCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InsuranceController",
    "Method": "GetAllInsurances",
    "RelativePath": "api/Insurance",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.InsuranceDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InsuranceController",
    "Method": "GetInsurance",
    "RelativePath": "api/Insurance/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.InsuranceDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.InsuranceController",
    "Method": "UpdateInsurance",
    "RelativePath": "api/Insurance/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Insurance.UpdateInsuranceCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.InsuranceController",
    "Method": "DeleteInsurance",
    "RelativePath": "api/Insurance/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.LicensePlateController",
    "Method": "CreateLicensePlate",
    "RelativePath": "api/LicensePlate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._LicensePlate.CreateLicensePlateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.LicensePlateController",
    "Method": "GetAllLicensePlates",
    "RelativePath": "api/LicensePlate",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.LicensePlateDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.LicensePlateController",
    "Method": "GetLicensePlate",
    "RelativePath": "api/LicensePlate/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.LicensePlateDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.LicensePlateController",
    "Method": "UpdateLicensePlate",
    "RelativePath": "api/LicensePlate/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._LicensePlate.UpdateLicensePlateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.LicensePlateController",
    "Method": "DeleteLicensePlate",
    "RelativePath": "api/LicensePlate/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.NotificationController",
    "Method": "CreateNotification",
    "RelativePath": "api/Notification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Notification.CreateNotificationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.NotificationController",
    "Method": "GetAllNotifications",
    "RelativePath": "api/Notification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.NotificationDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.NotificationController",
    "Method": "GetNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.NotificationDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.NotificationController",
    "Method": "UpdateNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Notification.UpdateNotificationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.NotificationController",
    "Method": "DeleteNotification",
    "RelativePath": "api/Notification/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnersController",
    "Method": "CreateOwner",
    "RelativePath": "api/Owners",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Owner.CreateOwnerCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnersController",
    "Method": "GetAllOwners",
    "RelativePath": "api/Owners",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnersController",
    "Method": "GetOwnerById",
    "RelativePath": "api/Owners/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnersController",
    "Method": "UpdateOwner",
    "RelativePath": "api/Owners/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Owner.UpdateOwnerCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnersController",
    "Method": "DeleteOwner",
    "RelativePath": "api/Owners/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnershipHistoryController",
    "Method": "CreateOwnershipHistory",
    "RelativePath": "api/OwnershipHistory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._OwnershipHistory.CreateOwnershipHistoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnershipHistoryController",
    "Method": "GetAllOwnershipHistories",
    "RelativePath": "api/OwnershipHistory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.OwnershipHistoryDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnershipHistoryController",
    "Method": "GetOwnershipHistory",
    "RelativePath": "api/OwnershipHistory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.OwnershipHistoryDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnershipHistoryController",
    "Method": "UpdateOwnershipHistory",
    "RelativePath": "api/OwnershipHistory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._OwnershipHistory.UpdateOwnershipHistoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.OwnershipHistoryController",
    "Method": "DeleteOwnershipHistory",
    "RelativePath": "api/OwnershipHistory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.RegistrationOfficeController",
    "Method": "CreateRegistrationOffice",
    "RelativePath": "api/RegistrationOffice",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._RegistrationOffice.CreateRegistrationOfficeCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.RegistrationOfficeController",
    "Method": "GetAllRegistrationOffices",
    "RelativePath": "api/RegistrationOffice",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.RegistrationOfficeDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.RegistrationOfficeController",
    "Method": "GetRegistrationOffice",
    "RelativePath": "api/RegistrationOffice/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.RegistrationOfficeDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.RegistrationOfficeController",
    "Method": "UpdateRegistrationOffice",
    "RelativePath": "api/RegistrationOffice/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._RegistrationOffice.UpdateRegistrationOfficeCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.RegistrationOfficeController",
    "Method": "DeleteRegistrationOffice",
    "RelativePath": "api/RegistrationOffice/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.TrafficViolationController",
    "Method": "CreateTrafficViolation",
    "RelativePath": "api/TrafficViolation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._TrafficViolation.CreateTrafficViolationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.TrafficViolationController",
    "Method": "GetAllTrafficViolations",
    "RelativePath": "api/TrafficViolation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.TrafficViolationDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.TrafficViolationController",
    "Method": "GetTrafficViolation",
    "RelativePath": "api/TrafficViolation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.TrafficViolationDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.TrafficViolationController",
    "Method": "UpdateTrafficViolation",
    "RelativePath": "api/TrafficViolation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._TrafficViolation.UpdateTrafficViolationCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.TrafficViolationController",
    "Method": "DeleteTrafficViolation",
    "RelativePath": "api/TrafficViolation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "GetAllVehicles",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Registration_System.DTOs.VehicleDTO, Registration_System, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "CreateVehicle",
    "RelativePath": "api/Vehicle",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Vehicle.CreateVehicleCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "GetVehicleById",
    "RelativePath": "api/Vehicle/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Registration_System.DTOs.VehicleDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "UpdateVehicle",
    "RelativePath": "api/Vehicle/{vehicleId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Vehicle.UpdateVehicleCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "DeleteVehicle",
    "RelativePath": "api/Vehicle/{vehicleId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vehicleId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "GetByLicensePlate",
    "RelativePath": "api/Vehicle/GetByLicensePlate/{licensePlateNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "licensePlateNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "GetOwnershipHistoryByLicensePlate",
    "RelativePath": "api/Vehicle/owners-by-license-plate/{licensePlate}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "licensePlate",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Registration_System.Controllers.VehicleController",
    "Method": "TransferOwnership",
    "RelativePath": "api/Vehicle/transfer-ownership",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "Registration_System.Commands._Vehicle.TransferVehicleOwnershipCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]